name: Google Java Format

on:
  push:
    branches: [ development, testing, acceptance, main ]
  pull_request:
    branches: [ development, testing, acceptance, main ]

# Define permissions at the top level
permissions:
  contents: write
  pull-requests: write

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # First check if formatting is needed without making changes
      - name: Check Google Java Format
        id: check-format
        continue-on-error: true
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--dry-run --set-exit-if-changed"
          skip-commit: true
      
      # Report format status but don't fail the build
      - name: Report format status
        run: |
          if [ "${{ steps.check-format.outcome }}" == "failure" ]; then
            echo "Formatting issues detected. Creating a PR to fix them."
          else
            echo "Code is already properly formatted!"
          fi
  
  # Separate job to make formatting changes and commit directly
  apply-format:
    runs-on: ubuntu-latest
    needs: check-format
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Apply formatting
      - name: Apply Google Java Format
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--replace"
          skip-commit: true
      
      # Check if changes were made
      - name: Check for modified files
        id: git-check
        run: |
          git diff --exit-code || echo "modified=true" >> $GITHUB_OUTPUT
      
      # Instead of creating a PR, commit directly
      - name: Commit formatting changes if needed
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "style: Format Java code with Google Java Format"
          git push
